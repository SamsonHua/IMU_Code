//===============================
// Antcelerometer V1.1
// Another random intern project
// Made by Samson H
// Severely helped by Conrad B
//===============================

//Dependencies
#include <Arduino.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_Sensor.h>
#include "SPI.h"
#include "SD.h"
#include "Wire.h"

//Object declarations
Adafruit_MPU6050 mpu;
Adafruit_SSD1306 display = Adafruit_SSD1306(128, 64, &Wire);
File dataFile;

//Pin declarations
const int leftSwitch = D3;
const int rightSwitch = D4;
const int chipSelect = D8;  // used for ESP8266

//Calibration constants
float xScale = 1;
float yScale = 1/1.005;
float zScale = 1/1.02;

//Logic Booleans
bool switch_pos = true;
bool switch_pos2 = true;
bool wait_for_idle = false;

//Variable holders
float ax_raw, ay_raw, az_raw;
float alpha = 0.99;
float cal_ax,cal_ay,cal_az = 0;

//Timing variables
long unsigned int t;
long unsigned int t0;

//Logging variables
float long_ax[3000];
float long_ay[3000];
float long_az[3000];
float long_t[3000];

int index_num = 0;

//Sensor Object
sensors_event_t a, g, temp;

//Cheeky Loading Screens
const unsigned char loadingScreen [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe1, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf1, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf1, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xf8, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xe3, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0x9f, 0xff, 0xff, 0xfe, 0x0f, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xcf, 0xff, 0xff, 0xf8, 0x7f, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xf7, 0xff, 0xff, 0xc3, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xf1, 0xff, 0xff, 0x0f, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xfc, 0x00, 0x00, 0x7f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xf9, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xc3, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc3, 0xff, 0xf0, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0x81, 0xff, 0xf0, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0x81, 0xff, 0xe0, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xc3, 0xff, 0xe0, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xe7, 0xff, 0xf0, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0xc7, 0xfb, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xc7, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xcf, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xff, 0x03, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0xff, 0xfe, 0x03, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x7f, 0x80, 0xfe, 0x01, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xb1, 0xff, 0x1c, 0xfe, 0x01, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0x3e, 0xfe, 0x03, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0x3e, 0xff, 0x07, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0x9e, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x87, 0xc3, 0xe7, 0xe3, 0x03, 0xc0, 0xfc, 0x3c, 0x02, 0x38, 0xf3, 0xf0, 0xff, 0xff, 
	0xff, 0xff, 0x01, 0xc1, 0xc3, 0xe3, 0x00, 0xc0, 0x7c, 0x1c, 0x02, 0x30, 0x71, 0xc0, 0x7f, 0xff, 
	0xff, 0xfe, 0x03, 0xc1, 0xc3, 0xe3, 0x00, 0xc0, 0x3c, 0x1c, 0x02, 0x30, 0x31, 0x80, 0x7f, 0xff, 
	0xff, 0xfc, 0x3f, 0x81, 0xc3, 0xe3, 0x18, 0xc6, 0x38, 0x1f, 0x0e, 0x30, 0x31, 0x8f, 0xff, 0xff, 
	0xff, 0xfc, 0x3f, 0x88, 0xc3, 0xe3, 0x00, 0xc6, 0x38, 0x8f, 0x0e, 0x30, 0x11, 0x0f, 0xff, 0xff, 
	0xff, 0xfc, 0x7f, 0x88, 0xc3, 0xe3, 0x01, 0xc0, 0x38, 0x8f, 0x0e, 0x31, 0x11, 0x08, 0x3f, 0xff, 
	0xff, 0xfc, 0x7f, 0x00, 0xc3, 0xe3, 0x00, 0xc0, 0x70, 0x0f, 0x0e, 0x31, 0x01, 0x08, 0x3f, 0xff, 
	0xff, 0xfc, 0x3f, 0x00, 0x43, 0xe3, 0x18, 0x40, 0x70, 0x07, 0x0e, 0x31, 0x81, 0x0e, 0x3f, 0xff, 
	0xff, 0xfe, 0x13, 0x00, 0x40, 0x63, 0x08, 0x44, 0x30, 0x07, 0x0e, 0x31, 0x81, 0x84, 0x3f, 0xff, 
	0xff, 0xfe, 0x02, 0x1c, 0x40, 0x23, 0x00, 0xc6, 0x01, 0xc7, 0x0e, 0x31, 0xc1, 0x80, 0x3f, 0xff, 
	0xff, 0xff, 0x02, 0x3c, 0x00, 0x23, 0x01, 0xc7, 0x03, 0xc3, 0x0e, 0x31, 0xc1, 0xc0, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char loggingScreen [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xfb, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xfb, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0x33, 0xfe, 0x07, 0x8f, 0xff, 0xff, 0xff, 0xff, 
	0xf1, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xf3, 0xfc, 0x07, 0x83, 0xff, 0xff, 0xff, 0xff, 
	0xf9, 0xcf, 0xff, 0xff, 0xff, 0x7f, 0xfe, 0xff, 0xfb, 0xf0, 0x07, 0xc9, 0xff, 0xff, 0xff, 0xff, 
	0xf9, 0xe7, 0xff, 0xff, 0xf8, 0x3f, 0xfe, 0xff, 0xfb, 0xc0, 0x07, 0xce, 0xff, 0xff, 0xff, 0xff, 
	0xfd, 0xfb, 0xff, 0xff, 0xc4, 0x7f, 0xfe, 0xff, 0xe3, 0x80, 0x07, 0xcf, 0x3f, 0xff, 0xff, 0xe1, 
	0xfc, 0xfd, 0xff, 0xfe, 0x1c, 0x7f, 0xfe, 0xff, 0xff, 0x80, 0x07, 0xef, 0x9f, 0xff, 0xff, 0x03, 
	0xfe, 0xfe, 0xff, 0xf9, 0xfc, 0xff, 0xfe, 0xff, 0xd7, 0xe0, 0x03, 0xe7, 0xef, 0xff, 0xfc, 0x63, 
	0xff, 0x7f, 0x00, 0x07, 0xfd, 0xff, 0xfe, 0xff, 0xf7, 0xf8, 0x03, 0xf7, 0xf7, 0xff, 0xe3, 0xe7, 
	0xff, 0x3f, 0xff, 0xdf, 0xf9, 0xff, 0xff, 0x7f, 0xf7, 0xf0, 0x03, 0xfb, 0xf8, 0x01, 0x1f, 0xe7, 
	0xff, 0xbf, 0xff, 0xff, 0xf3, 0xff, 0xff, 0x7c, 0xef, 0xf0, 0x03, 0xf9, 0xff, 0xfe, 0x7f, 0xcf, 
	0xff, 0xc7, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x7f, 0x1f, 0xe0, 0x33, 0xfd, 0xff, 0xff, 0xff, 0xdf, 
	0xff, 0xcf, 0xff, 0xff, 0xcf, 0xff, 0xff, 0x3f, 0xff, 0xe0, 0x3f, 0xfe, 0xbf, 0xff, 0xff, 0xbf, 
	0xff, 0xdf, 0xff, 0xfe, 0x1f, 0xff, 0xfc, 0xdf, 0x3f, 0xc0, 0x7f, 0xfe, 0x7f, 0xff, 0xff, 0x7f, 
	0xff, 0xdc, 0xff, 0xff, 0x7f, 0xff, 0xc4, 0xef, 0x0f, 0xc0, 0x7f, 0xfe, 0x7f, 0xff, 0xf6, 0xff, 
	0xff, 0xb8, 0x7f, 0x8f, 0x3f, 0xff, 0x1e, 0xe3, 0x21, 0xc0, 0xff, 0xfe, 0xf7, 0xff, 0xf9, 0xff, 
	0xff, 0xb8, 0x7f, 0x8f, 0xbf, 0xfe, 0x7e, 0xf0, 0xb2, 0x00, 0xff, 0xfc, 0xe3, 0xfe, 0x79, 0xff, 
	0xff, 0x3c, 0xff, 0x8f, 0xbf, 0xfe, 0xfe, 0x79, 0x39, 0xc1, 0xff, 0xfd, 0xc3, 0xfc, 0x3d, 0xff, 
	0xff, 0x7f, 0xe7, 0xff, 0x9f, 0xfd, 0xff, 0xbd, 0x3b, 0xe1, 0xff, 0xfd, 0xe3, 0xfc, 0x3d, 0xff, 
	0xff, 0x07, 0xe7, 0xff, 0xdf, 0xfd, 0xff, 0xbc, 0x37, 0xe1, 0xff, 0xfd, 0xff, 0x3e, 0x7c, 0xff, 
	0xff, 0x07, 0xff, 0xf0, 0xdf, 0xfd, 0xff, 0xbe, 0x3b, 0xf3, 0xff, 0xf8, 0x3f, 0x3f, 0xfe, 0xff, 
	0xff, 0x07, 0xc3, 0xe0, 0xdf, 0xfd, 0xff, 0xdf, 0x3b, 0xf3, 0xff, 0xf8, 0x3f, 0xff, 0x8e, 0xff, 
	0xff, 0x4f, 0xdd, 0xe0, 0xdf, 0xfd, 0xfe, 0xef, 0xbf, 0xff, 0xff, 0xf8, 0x3f, 0x1f, 0x86, 0xff, 
	0xff, 0x7f, 0xdd, 0xf0, 0xcf, 0xfc, 0x00, 0x40, 0xc2, 0x31, 0xff, 0xf8, 0x3e, 0x0f, 0x02, 0x7f, 
	0xff, 0x7f, 0xc9, 0xff, 0xef, 0xfc, 0x01, 0x80, 0x42, 0x61, 0xff, 0xfb, 0xfe, 0xef, 0x87, 0x7f, 
	0xff, 0xff, 0xf3, 0xff, 0xff, 0xf8, 0xf9, 0x10, 0x40, 0xc3, 0xff, 0xf9, 0xfe, 0xef, 0xcf, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x19, 0x30, 0x00, 0xc0, 0xff, 0xfd, 0xff, 0x0f, 0xff, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x19, 0x30, 0x00, 0x20, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x19, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x38, 0x04, 0xc3, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf3, 0xfe, 0x1f, 0xe1, 0xf8, 0x38, 0xe3, 0xc7, 0xc3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf8, 0x07, 0x80, 0xf0, 0x18, 0xc1, 0xc7, 0x01, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf0, 0x07, 0x00, 0xe0, 0x18, 0xc0, 0xc6, 0x01, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf0, 0xc3, 0x0f, 0xc3, 0xf8, 0xc0, 0xc6, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf1, 0xe2, 0x1f, 0xc3, 0xf8, 0xc0, 0x44, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xe1, 0xe2, 0x10, 0x46, 0x08, 0xc4, 0x44, 0x20, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf1, 0xe2, 0x10, 0x42, 0x08, 0xc4, 0x04, 0x20, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0xf1, 0xc2, 0x1c, 0x43, 0x08, 0xc6, 0x04, 0x38, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x30, 0x03, 0x00, 0x61, 0x08, 0xc6, 0x06, 0x00, 0xcc, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x18, 0x07, 0x00, 0x60, 0x08, 0xc7, 0x06, 0x00, 0x88, 0x07, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x1c, 0x0f, 0x80, 0x70, 0x18, 0xc7, 0x07, 0x00, 0x88, 0xc7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char sdScreen [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xb7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xdf, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0x1b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xf1, 0x2d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xc8, 0x0d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0x99, 0x1e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0x40, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0x40, 0xfd, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7e, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0x63, 0xf0, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xb7, 0xee, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xdf, 0x9f, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0x7f, 0x7e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xdf, 0x3f, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0x77, 0x7e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xde, 0xff, 0xb7, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0x77, 0x6e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xdc, 0xff, 0xdb, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x77, 0x6e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xde, 0xff, 0xe9, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x77, 0x6e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xdf, 0x7f, 0xed, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0x37, 0x6e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe9, 0x7f, 0xee, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xb3, 0x6e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf4, 0xbf, 0x9e, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xbb, 0x6e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xdf, 0x7d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x6e, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x4e, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x6c, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xa1, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0x6d, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xb7, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xbf, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xbe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xbd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x1d, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x93, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xfd, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x0f, 0xce, 0x73, 0xe3, 0x8f, 0x9c, 0xf3, 0xe1, 0xfc, 0xff, 0x0f, 0xe1, 0xf1, 0xff, 0xff, 
	0xfe, 0x03, 0x8e, 0x61, 0xc3, 0x03, 0x18, 0x73, 0x80, 0xfc, 0xfc, 0x07, 0x80, 0xc0, 0xff, 0xff, 
	0xfe, 0x01, 0x8e, 0x61, 0xc3, 0x01, 0x18, 0x33, 0x81, 0xfc, 0xfc, 0x03, 0x01, 0xc0, 0xff, 0xff, 
	0xfe, 0x31, 0x8e, 0x60, 0xc3, 0x11, 0x18, 0x33, 0x1f, 0xfc, 0xf8, 0xe3, 0x1f, 0xc7, 0xff, 0xff, 
	0xfe, 0x38, 0x8e, 0x60, 0x83, 0x11, 0x18, 0x13, 0x10, 0xfc, 0xf8, 0xf3, 0x10, 0xc1, 0xff, 0xff, 
	0xfe, 0x38, 0x8e, 0x60, 0x93, 0x01, 0x18, 0x93, 0x10, 0xfc, 0xf8, 0xf1, 0x30, 0xe0, 0xff, 0xff, 
	0xfe, 0x38, 0x8e, 0x60, 0x13, 0x07, 0x18, 0x83, 0x18, 0xfc, 0xf8, 0xe3, 0x10, 0xf8, 0xff, 0xff, 
	0xfe, 0x31, 0x8c, 0x62, 0x13, 0x1f, 0x18, 0xc3, 0x0c, 0xfc, 0xf8, 0x63, 0x18, 0xf8, 0xff, 0xff, 
	0xfe, 0x01, 0xc0, 0x62, 0x33, 0x1f, 0x18, 0xc3, 0x80, 0xfc, 0x0c, 0x03, 0x80, 0x80, 0x88, 0xff, 
	0xfe, 0x07, 0xe0, 0xe2, 0x33, 0x1f, 0x18, 0xe3, 0xc0, 0xfc, 0x0e, 0x07, 0xc0, 0xc1, 0x88, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char memoryScreen [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xf8, 0xff, 0x8f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xe3, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x3f, 0xff, 0xff, 0xcf, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x9f, 0xff, 0xff, 0xbf, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc9, 0xcf, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xe1, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x90, 0xe7, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x36, 0x73, 0xff, 0xfd, 0xfc, 0x7c, 0xff, 0xff, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x73, 0x39, 0xff, 0xfb, 0xf9, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0xf9, 0x9c, 0xff, 0xf7, 0xf1, 0xfe, 0x7f, 0xff, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf9, 0x08, 0xd8, 0x7f, 0xef, 0x87, 0xff, 0x3f, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf3, 0x64, 0x13, 0x7f, 0xdc, 0x03, 0xff, 0xc7, 0xff, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe6, 0x73, 0x21, 0xff, 0x99, 0xf9, 0xff, 0xf0, 0x07, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xcf, 0x39, 0xc5, 0xff, 0xbb, 0xfe, 0xff, 0xc7, 0xc7, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x91, 0x9d, 0x87, 0xff, 0xb7, 0x1e, 0xff, 0x3f, 0xf7, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x24, 0xc9, 0x17, 0xff, 0x77, 0x9f, 0x7e, 0x71, 0xfb, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x66, 0x62, 0x0f, 0xff, 0x77, 0x87, 0x7e, 0xf3, 0xfb, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0xf3, 0x3c, 0x7f, 0xff, 0x73, 0x03, 0x7e, 0xc3, 0xfb, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf9, 0x19, 0x99, 0x3f, 0xff, 0x70, 0xd8, 0x7e, 0x39, 0xfb, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf2, 0x4c, 0x91, 0xff, 0xff, 0x77, 0x3e, 0xff, 0xfa, 0x23, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe6, 0x66, 0x24, 0xff, 0xff, 0x78, 0x7f, 0xff, 0xf7, 0x83, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xce, 0x73, 0x47, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xf8, 0x47, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x93, 0x39, 0x93, 0xff, 0xff, 0x7f, 0xf8, 0x8f, 0xff, 0xbf, 0xfb, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x20, 0x99, 0x0f, 0xff, 0xff, 0x7f, 0xf7, 0x67, 0xff, 0xff, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x6c, 0x42, 0x4f, 0xff, 0xff, 0x7f, 0xef, 0xf0, 0x7f, 0xff, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0xe6, 0x24, 0x1f, 0xff, 0xff, 0x7f, 0x0f, 0xff, 0x07, 0xff, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0x33, 0x38, 0xbf, 0xff, 0xff, 0x7e, 0x7f, 0x7f, 0xfb, 0xff, 0xf7, 0xff, 0xff, 
	0xff, 0xff, 0xf2, 0x19, 0x90, 0xff, 0xff, 0xff, 0xbe, 0xf8, 0x8f, 0xfb, 0xff, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xe6, 0xcc, 0x22, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xf7, 0xfb, 0xff, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xce, 0x66, 0x41, 0xff, 0xff, 0xff, 0xbb, 0xff, 0x7f, 0xfc, 0x7f, 0xef, 0xff, 0xff, 
	0xff, 0xff, 0xe6, 0x33, 0x8b, 0xff, 0xff, 0xff, 0xbc, 0x7f, 0xff, 0xff, 0x7f, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0x1b, 0x27, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0x7f, 0xdf, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0x82, 0x3f, 0xff, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xff, 0x7f, 0xdf, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0xc4, 0x9f, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x78, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x32, 0x7f, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0x1f, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc9, 0xff, 0xff, 0xff, 0xff, 0xff, 0x8f, 0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xf0, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x87, 0xce, 0x60, 0x3f, 0x87, 0xc1, 0xf0, 0xf1, 0x81, 0x8f, 0x1f, 0x0f, 0x07, 0x1c, 0x7f, 
	0xff, 0x01, 0x8e, 0x20, 0x3f, 0x01, 0x81, 0xf0, 0xe1, 0x81, 0x0e, 0x0c, 0x07, 0x03, 0x18, 0xff, 
	0xfe, 0x00, 0x8e, 0x20, 0x3e, 0x00, 0x81, 0xf0, 0xe1, 0x81, 0x06, 0x08, 0x03, 0x01, 0x88, 0xff, 
	0xfe, 0x38, 0x8e, 0x38, 0xfe, 0x38, 0x8f, 0xf0, 0x61, 0x8f, 0x06, 0x08, 0xe3, 0x11, 0x81, 0xff, 
	0xfe, 0x38, 0x8e, 0x38, 0xfe, 0x38, 0x81, 0xf0, 0x41, 0x81, 0x06, 0x08, 0xe3, 0x01, 0xc1, 0xff, 
	0xfe, 0x38, 0x8e, 0x38, 0xfe, 0x38, 0x81, 0xf0, 0x41, 0x81, 0x00, 0x08, 0xe3, 0x03, 0xc3, 0xff, 
	0xfe, 0x38, 0x8e, 0x38, 0xfe, 0x38, 0x81, 0xf0, 0x09, 0x8f, 0x10, 0x88, 0xe3, 0x03, 0xe3, 0xff, 
	0xfe, 0x30, 0x84, 0x38, 0xfe, 0x30, 0x8f, 0xf1, 0x09, 0x8f, 0x10, 0x88, 0x63, 0x11, 0xe3, 0xff, 
	0xfe, 0x01, 0xc0, 0x78, 0xfe, 0x01, 0x8f, 0xf1, 0x19, 0x81, 0x10, 0x8c, 0x07, 0x11, 0xe3, 0xff, 
	0xff, 0x03, 0xe0, 0xf8, 0xff, 0x03, 0x8f, 0xf1, 0x19, 0x81, 0x11, 0x8e, 0x0f, 0x18, 0xe3, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char noSD [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc2, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x02, 0x97, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf9, 0xfc, 0x1b, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf7, 0xf8, 0x7d, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xcf, 0x9b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xf8, 0xfe, 0xff, 0xff, 0xff, 0xf3, 0x66, 0xcd, 0x9b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xcf, 0xf8, 0xc6, 0x7f, 0xff, 0xff, 0xf2, 0x66, 0xcd, 0x9b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x0f, 0xf8, 0xd3, 0x7f, 0xff, 0xff, 0xf2, 0x66, 0xcd, 0x9b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x21, 0xf1, 0xbd, 0x3f, 0xff, 0xff, 0xf2, 0x66, 0xcd, 0x9b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x78, 0xf1, 0x7c, 0xbf, 0xff, 0xff, 0xf2, 0x66, 0xcd, 0x9b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x7d, 0xf2, 0xe6, 0xbf, 0xff, 0xff, 0xf3, 0xfe, 0xfd, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xf0, 0xfa, 0xdb, 0x5f, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xef, 0x7a, 0xdb, 0x5f, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0xdf, 0x3e, 0xe3, 0xaf, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf1, 0xbf, 0x9e, 0x7f, 0xa7, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf7, 0xb1, 0xdf, 0x7f, 0xa7, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xb5, 0xdf, 0x9f, 0x67, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xb1, 0xbf, 0xe0, 0xf3, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xff, 0x7f, 0xff, 0xf3, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xde, 0x7f, 0xff, 0xf3, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xdc, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xe1, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0xff, 0xe0, 0x07, 0xfb, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf9, 0xff, 0xcf, 0xff, 0xfb, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0xff, 0xbf, 0xff, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xbf, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xcf, 0xff, 0xff, 0xef, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x77, 0xff, 0xff, 0xef, 0xff, 0xff, 0xdf, 0xff, 0xff, 0xf3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x30, 0xe3, 0x86, 0x04, 0x0e, 0x03, 0xf0, 0xe0, 0xff, 0xc1, 0xc3, 0xc1, 0xe0, 0xf1, 0xff, 
	0xff, 0x10, 0x62, 0x02, 0x04, 0x06, 0x03, 0xe0, 0x60, 0x3f, 0x81, 0xc1, 0xc0, 0x60, 0x30, 0xff, 
	0xff, 0x10, 0x62, 0x06, 0x04, 0x02, 0x03, 0xe0, 0x60, 0x1f, 0x01, 0xc1, 0xc0, 0x60, 0x10, 0xff, 
	0xff, 0x10, 0x22, 0x3e, 0x3c, 0x63, 0x8f, 0xc3, 0xe3, 0x1f, 0x1f, 0x81, 0xc4, 0x23, 0x11, 0xff, 
	0xff, 0x10, 0x22, 0x0e, 0x04, 0x03, 0x8f, 0xe0, 0xe3, 0x1e, 0x1f, 0x88, 0xc0, 0x63, 0x01, 0xff, 
	0xff, 0x11, 0x03, 0x06, 0x04, 0x07, 0x8f, 0xf0, 0x63, 0x1e, 0x1f, 0x88, 0xc0, 0x63, 0x09, 0xff, 
	0xff, 0x11, 0x03, 0xc2, 0x3c, 0x07, 0x8f, 0xf8, 0x63, 0x1f, 0x1f, 0x00, 0xc0, 0xe3, 0x19, 0xff, 
	0xff, 0x11, 0x82, 0xe2, 0x3c, 0x47, 0x8f, 0xcc, 0x62, 0x1f, 0x1d, 0x00, 0x44, 0x62, 0x1b, 0xff, 
	0xff, 0x11, 0x82, 0x02, 0x04, 0x63, 0x8f, 0xc0, 0x60, 0x3f, 0x01, 0x18, 0x44, 0x20, 0x11, 0xff, 
	0xff, 0x11, 0xc2, 0x06, 0x04, 0x61, 0x8f, 0xc0, 0xe0, 0x7f, 0x80, 0x1c, 0x46, 0x20, 0x71, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char cleaningScreen [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0xf0, 0xe3, 0xc7, 0x3e, 0xc3, 0x87, 0xc7, 0x06, 0xc7, 0x78, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x30, 0xc1, 0xc7, 0x3c, 0xc0, 0x83, 0xc6, 0x04, 0xc6, 0x70, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0x33, 0x8f, 0x87, 0x3c, 0xc8, 0x91, 0x87, 0x8c, 0xc2, 0x63, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x30, 0x9f, 0x93, 0x3c, 0xc1, 0x91, 0x93, 0x9c, 0xc2, 0x66, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x70, 0x9f, 0x93, 0x3c, 0xc1, 0x83, 0x93, 0x9c, 0xc8, 0x64, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x73, 0x9f, 0x03, 0x3c, 0xcc, 0x93, 0x03, 0x9c, 0xc8, 0x66, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0x30, 0xc1, 0x01, 0x04, 0xc0, 0x91, 0x01, 0x9c, 0xcc, 0x60, 0x6c, 0xff, 0xff, 
	0xff, 0xff, 0xf3, 0x10, 0xc1, 0x39, 0x04, 0xc1, 0x98, 0x39, 0x9c, 0xcc, 0x70, 0x64, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc6, 0x0e, 0x3b, 0x9f, 0x18, 0x36, 0x7d, 0xe7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x0e, 0x39, 0x9e, 0x00, 0x26, 0x79, 0xe7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x9f, 0x1c, 0x38, 0x3e, 0x7c, 0x66, 0x79, 0xe7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x8f, 0x3c, 0x9c, 0x3e, 0x3c, 0xe6, 0x79, 0xe7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc7, 0x3c, 0x9c, 0x7f, 0x1c, 0xe6, 0x79, 0xe7, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe3, 0x38, 0x1e, 0x7f, 0x8c, 0xe6, 0x79, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x03, 0x38, 0x0e, 0x7c, 0x0c, 0xe6, 0x08, 0x27, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x87, 0x39, 0xce, 0x7e, 0x1c, 0xe6, 0x08, 0x27, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7e, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x7c, 0xf9, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x79, 0xf8, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7b, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x38, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x9e, 0xc9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0e, 0x0d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0c, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xc9, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xcb, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xcb, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xcb, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfb, 0xfe, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x03, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xfe, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xfe, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbb, 0xfe, 0x3c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9b, 0xff, 0x8d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9b, 0xff, 0xed, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9b, 0xfe, 0x2d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdb, 0xfe, 0x8d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xda, 0x52, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xda, 0x52, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xda, 0x52, 0xe1, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xca, 0x52, 0xcc, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xca, 0x52, 0x9f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcc, 0x01, 0x96, 0xdb, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0x9f, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0x9f, 0x3e, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0x9f, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x1f, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x0e, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const unsigned char idleScreen [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x03, 0x3f, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0x8c, 0x9f, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0x0f, 0x7b, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9f, 0xff, 0x87, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xe7, 0xbf, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xf3, 0xe1, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xf1, 0xde, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x83, 0xff, 0x39, 0xdf, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0x3d, 0xfc, 0x99, 0xcf, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x7e, 0xf9, 0x8d, 0xe7, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0xf6, 0xf0, 0x6e, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe6, 0xe3, 0x74, 0x76, 0x77, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf6, 0xe7, 0x6c, 0x77, 0x7f, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xee, 0xfe, 0x6f, 0xe7, 0x3b, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0x7e, 0xf7, 0xef, 0x3b, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0x99, 0xf8, 0x1f, 0xbb, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xc3, 0xff, 0xff, 0xbb, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xa7, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xef, 0xaf, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xe7, 0x9f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xef, 0xdf, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xef, 0xdf, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xef, 0xdf, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xef, 0xdf, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xdf, 0xdf, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xdf, 0xdf, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x9f, 0xdf, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xf3, 0xff, 0x3f, 0x9f, 0xeb, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xe3, 0xfe, 0x7f, 0x9f, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xf8, 0xe1, 0xff, 0xbf, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0x0f, 0xff, 0x3f, 0xeb, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfa, 0xff, 0xff, 0xff, 0x79, 0xeb, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0x3f, 0xff, 0xff, 0x7a, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xdf, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x0c, 0x39, 0xe6, 0x0c, 0x1c, 0x30, 0x23, 0x0e, 0x39, 0xe0, 0xf0, 0xe3, 0x90, 0x7f, 0x3f, 
	0xfc, 0x0c, 0x39, 0xe6, 0x04, 0x0c, 0x30, 0x22, 0x06, 0x11, 0xe0, 0x60, 0x61, 0x10, 0x7f, 0x3f, 
	0xfc, 0x7c, 0x39, 0xe6, 0x44, 0x8c, 0x3c, 0x62, 0x22, 0x11, 0xe4, 0x22, 0x21, 0x11, 0xff, 0x3f, 
	0xfc, 0xf8, 0x19, 0xe6, 0x0c, 0x08, 0x1c, 0xe0, 0x62, 0x01, 0xe6, 0x06, 0x20, 0x10, 0x7f, 0x3f, 
	0xfc, 0xf8, 0x19, 0xe6, 0x04, 0x18, 0x1c, 0xe0, 0x62, 0x41, 0xe6, 0x06, 0x24, 0x10, 0x7f, 0x3f, 
	0xfc, 0xf8, 0x19, 0xe6, 0x44, 0x18, 0x1c, 0xe0, 0x62, 0x41, 0xe6, 0x06, 0x24, 0x11, 0xff, 0x3f, 
	0xfc, 0x00, 0x08, 0x26, 0x04, 0x80, 0x0c, 0xe2, 0x02, 0x61, 0xe0, 0x60, 0x26, 0x10, 0x49, 0x3f, 
	0xfe, 0x01, 0x88, 0x26, 0x0c, 0xc1, 0x8c, 0xe3, 0x06, 0x61, 0xe0, 0xf0, 0x66, 0x10, 0x49, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x82, 0x60, 0x08, 0x49, 0x83, 0x1e, 0x43, 0x30, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x02, 0x08, 0x08, 0x49, 0xc2, 0x0e, 0x41, 0x30, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x18, 0x09, 0x93, 0xc1, 0xe4, 0x4e, 0x49, 0x30, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x88, 0x09, 0x93, 0xc1, 0xe4, 0x4e, 0x49, 0x30, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x08, 0x89, 0x90, 0x49, 0xe6, 0x0e, 0x41, 0x10, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x08, 0x99, 0x98, 0x49, 0xe6, 0x0e, 0x43, 0x00, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {

  //Begin serial port and set sample speed
  Serial.begin(115200);
  
  //Enable pull up resistors for switches
  pinMode(leftSwitch, INPUT_PULLUP);
  pinMode(rightSwitch, INPUT_PULLUP);

  //Attempt to connect OLED over I2C
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x64
    Serial.println(F("SSD1306 not found"));
    for (;;)
      ; // Don't proceed, loop forever
  }

  //Attempt to connect to MCU over I2C
  if (!mpu.begin()) {
    while (1)
      yield();
  }

  //Attempt to connect to SD card
  if (!SD.begin(chipSelect)) {
    Serial.println("Initialization failed!");
	display.clearDisplay();
  	display.drawBitmap(0, 0, noSD, 128, 64, 1);
	display.display();
    while (1);
  }

  //Set I2C bus speed to 400KHz
  Wire.setClock(400000L);

  //Turn on OLED and display calibrating screens
  display.clearDisplay();
  display.drawBitmap(0, 0, loadingScreen, 128, 64, 1);
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setRotation(0);
  display.setCursor(0,10);
  display.display();

  delay(4000);
  
  //Begin calibration sequence
  for(int i = 0; i < 100; i++){
    mpu.getEvent(&a,&g,&temp);
    ax_raw = a.acceleration.x * xScale;
    ay_raw = a.acceleration.y * yScale;
    az_raw = a.acceleration.z * zScale;

    cal_ax += ax_raw;
    cal_ay += ay_raw;
    cal_az += az_raw;
  }
  //Take average of 100 readings
  cal_ax = cal_ax/100;
  cal_ay = cal_ay/100;
  cal_az = cal_az/100;

  delay(1000);

  display.clearDisplay();
  display.println("Calibrated..! X:");
  display.print(cal_ax);
  display.print(", Y:");
  display.print(cal_ay);
  display.print(", Z:");
  display.print(cal_az);
  display.display();

  delay(2000);

}

void loop() {

//===============================
//IDLE TO CLEAR STATE
//===============================
if(!digitalRead(rightSwitch) && switch_pos2){
	switch_pos2 = false;
	if(!wait_for_idle){
		display.clearDisplay();
		display.drawBitmap(0, 0, cleaningScreen, 128, 64, 1);
		display.display();
		
		//Begin calibration sequence
		for(int i = 0; i < 100; i++){
			mpu.getEvent(&a,&g,&temp);
			ax_raw = a.acceleration.x * xScale;
			ay_raw = a.acceleration.y * yScale;
			az_raw = a.acceleration.z * zScale;

			cal_ax += ax_raw;
			cal_ay += ay_raw;
			cal_az += az_raw;
		}
		//Take average of 100 readings
		cal_ax = cal_ax/100;
		cal_ay = cal_ay/100;
		cal_az = cal_az/100;

		delay(1000);
		//Set index back to 0
		index_num = 0;
		//Go to idle screen
		wait_for_idle = true;
	}
	display.clearDisplay();
	display.drawBitmap(0, 0, idleScreen, 128, 64, 1);
	display.display();
	
}

//===============================
//CLEAR TO IDLE STATE
//===============================
if(digitalRead(rightSwitch) && !switch_pos2){
	switch_pos2 = true;
	wait_for_idle = false;
}


//===============================
//TRANSITION FROM IDLE TO LOGGING
//===============================
if(!digitalRead(leftSwitch) && switch_pos && !wait_for_idle){
	switch_pos = false;
	display.clearDisplay();
  	display.drawBitmap(0, 0, loggingScreen, 128, 64, 1);
	display.display();
	t0 = millis();
}


//===============================
//TRANSITION FROM LOGGING TO IDLE
//===============================
if(digitalRead(leftSwitch) && !switch_pos && !wait_for_idle){
	switch_pos = true;
	display.clearDisplay();
	display.drawBitmap(0, 0, sdScreen, 128, 64, 1);
	display.display();
	
	//Clear old file
	SD.remove("Logging.txt");
	delay(2000);
	//Create new file
	dataFile = SD.open("Logging.txt", FILE_WRITE);
	//Dump Data into SD card
	for(int i = 0; i < sizeof(long_az) / sizeof(long_az[0]); i++){
		if(dataFile){
			if(long_az[i] != 0){
				dataFile.print(long_t[i] - t0);
				dataFile.print(",");
				dataFile.print(long_ax[i] * xScale - cal_ax);
				dataFile.print(",");
				dataFile.print(long_ay[i] * yScale - cal_ay);
				dataFile.print(",");
				dataFile.print(long_az[i] * zScale - (cal_az - 9.81));
				dataFile.println("");
			}
		}
	}
	//Close SD card
	dataFile.close();
	delay(4000);
}


//================
//IDLE STATE
//================
if(digitalRead(leftSwitch) && !wait_for_idle){
	
		mpu.getEvent(&a,&g,&temp);
		display.setTextSize(1);
		display.setTextColor(WHITE);
		display.setRotation(0);
		display.setCursor(0,10);
		display.clearDisplay();
		display.println("AntCelerometer v1.1");
		display.println("=================");;
		display.println("Acceleration (m/s^2):");
		display.print(a.acceleration.x * xScale - cal_ax, 1);
		display.print(", ");
		display.print(a.acceleration.y * yScale - cal_ay, 1);
		display.print(", ");
		display.print(a.acceleration.z * zScale - (cal_az - 9.8), 1);
		display.println("");
		display.display();

}


//================
//LOGGING STATE
//================
if(!digitalRead(leftSwitch) && !wait_for_idle){
	//Check to see if overflow first
	if(index_num < 3000){
		mpu.getEvent(&a,&g,&temp);
		long_ax[index_num] = a.acceleration.x;
		long_ay[index_num] = a.acceleration.y;
		long_az[index_num] = a.acceleration.z;
		long_t[index_num] = millis();
		index_num++;
	}else{
		display.clearDisplay();
  		display.drawBitmap(0, 0, memoryScreen, 128, 64, 1);
		display.display();
	}
}

}